apply plugin: "maven-publish"
apply plugin: 'com.android.library'
group = "eu.interopehrate"
version="0.1.2"

//plugins {
//    id 'com.android.library'
//}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories{
    maven { url "http://213.249.46.206:8081/repository/maven-releases/" }
}


dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'com.squareup.retrofit2:retrofit:2.7.2'
    implementation 'com.google.code.gson:gson:2.6.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.2'

    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.5.0'
}

/*
 * Configuration of a task, for publishing mrd2e.arr into a Nexus Repository
 */
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "mhri"
            artifact("build/outputs/aar/$archivesBaseName"+"-release.aar") {
                extension "aar"
                // adds dependencies to the generated POM
                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    //Iterate over the dependencies, adding a <dependency> node for each
                    configurations.releaseCompileClasspath.allDependencies.each {
                        if (it.group != null && it.name != null) {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                            //If there are any exclusions in dependency
                            if (it.excludeRules.size() > 0) {
                                def exclusionsNode = dependencyNode.appendNode('exclusions')
                                it.excludeRules.each { rule ->
                                    def exclusionNode = exclusionsNode.appendNode('exclusion')
                                    exclusionNode.appendNode('groupId', rule.group)
                                    exclusionNode.appendNode('artifactId', rule.module)
                                }
                            }
                        }
                    }
                }
            }
            // descriptive information to add to the generated POM file
            pom {
                name = 'MOBILE HRI LIBRARY'
                description = 'MOBILE HRI LIBRARY'
                url = 'http://www.interopehrate.eu'
            }
        }
    }
    repositories {
        maven {
            name "IEHR-Nexus"
            url "http://213.249.46.206:8081/repository/maven-releases/"
            credentials {
                username project.repoUser
                password project.repoPassword
            }
        }
    }
}